package xhs;import java.util.*;public class MaxExcellence {  public static void main(String[] args) {    Scanner sc = new Scanner(System.in);    int n = sc.nextInt();    int k = sc.nextInt();    int[] likes = new int[n];    int[] comments = new int[n];    for (int i = 0; i < n; i++) {      likes[i] = sc.nextInt();    }    for (int i = 0; i < n; i++) {      comments[i] = sc.nextInt();    }    List<int[]> notes = new ArrayList<>();    for (int i = 0; i < n; i++) {      notes.add(new int[]{likes[i], comments[i]});    }    notes.sort((a, b) -> b[1] - a[1]);    long maxExcellence = 0;    long sumLikes = 0;    PriorityQueue<Integer> minHeap = new PriorityQueue<>(k);    for (int i = 0; i < n; i++) {      sumLikes += notes.get(i)[0];      minHeap.offer(notes.get(i)[0]);      if (minHeap.size() > k) {        sumLikes -= minHeap.poll();      }      if (minHeap.size() == k) {        maxExcellence = Math.max(maxExcellence, sumLikes * notes.get(i)[1]);      }    }    System.out.println(maxExcellence);    sc.close();  }}